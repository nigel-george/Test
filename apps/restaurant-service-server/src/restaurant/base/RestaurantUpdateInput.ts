/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  IsOptional,
  IsDate,
  IsBoolean,
  IsNumber,
  ValidateNested,
  IsInt,
} from "class-validator";
import { Type } from "class-transformer";
import { RestaurantPhotoUpdateManyWithoutRestaurantsInput } from "./RestaurantPhotoUpdateManyWithoutRestaurantsInput";
import { RestaurantWorkingHourUpdateManyWithoutRestaurantsInput } from "./RestaurantWorkingHourUpdateManyWithoutRestaurantsInput";
import { TagUpdateManyWithoutRestaurantsInput } from "./TagUpdateManyWithoutRestaurantsInput";
import { UserFavoriteRestaurantUpdateManyWithoutRestaurantsInput } from "./UserFavoriteRestaurantUpdateManyWithoutRestaurantsInput";
import { UserInteractionUpdateManyWithoutRestaurantsInput } from "./UserInteractionUpdateManyWithoutRestaurantsInput";

@InputType()
class RestaurantUpdateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  affordability?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  contact?: string | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  createDate?: Date | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  email?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  fullAddress?: string | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isRegistered?: boolean | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  latitude?: number | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  longitude?: number | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  placeId?: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  rating?: number | null;

  @ApiProperty({
    required: false,
    type: () => RestaurantPhotoUpdateManyWithoutRestaurantsInput,
  })
  @ValidateNested()
  @Type(() => RestaurantPhotoUpdateManyWithoutRestaurantsInput)
  @IsOptional()
  @Field(() => RestaurantPhotoUpdateManyWithoutRestaurantsInput, {
    nullable: true,
  })
  restaurantPhotos?: RestaurantPhotoUpdateManyWithoutRestaurantsInput;

  @ApiProperty({
    required: false,
    type: () => RestaurantWorkingHourUpdateManyWithoutRestaurantsInput,
  })
  @ValidateNested()
  @Type(() => RestaurantWorkingHourUpdateManyWithoutRestaurantsInput)
  @IsOptional()
  @Field(() => RestaurantWorkingHourUpdateManyWithoutRestaurantsInput, {
    nullable: true,
  })
  restaurantWorkingHours?: RestaurantWorkingHourUpdateManyWithoutRestaurantsInput;

  @ApiProperty({
    required: false,
    type: () => TagUpdateManyWithoutRestaurantsInput,
  })
  @ValidateNested()
  @Type(() => TagUpdateManyWithoutRestaurantsInput)
  @IsOptional()
  @Field(() => TagUpdateManyWithoutRestaurantsInput, {
    nullable: true,
  })
  tags?: TagUpdateManyWithoutRestaurantsInput;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  totalReviews?: number | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  updateDate?: Date | null;

  @ApiProperty({
    required: false,
    type: () => UserFavoriteRestaurantUpdateManyWithoutRestaurantsInput,
  })
  @ValidateNested()
  @Type(() => UserFavoriteRestaurantUpdateManyWithoutRestaurantsInput)
  @IsOptional()
  @Field(() => UserFavoriteRestaurantUpdateManyWithoutRestaurantsInput, {
    nullable: true,
  })
  userFavoriteRestaurants?: UserFavoriteRestaurantUpdateManyWithoutRestaurantsInput;

  @ApiProperty({
    required: false,
    type: () => UserInteractionUpdateManyWithoutRestaurantsInput,
  })
  @ValidateNested()
  @Type(() => UserInteractionUpdateManyWithoutRestaurantsInput)
  @IsOptional()
  @Field(() => UserInteractionUpdateManyWithoutRestaurantsInput, {
    nullable: true,
  })
  userInteractions?: UserInteractionUpdateManyWithoutRestaurantsInput;
}

export { RestaurantUpdateInput as RestaurantUpdateInput };
