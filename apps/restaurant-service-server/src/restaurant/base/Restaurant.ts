/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  IsOptional,
  IsDate,
  IsBoolean,
  IsNumber,
  ValidateNested,
  IsInt,
} from "class-validator";
import { Type } from "class-transformer";
import { RestaurantPhoto } from "../../restaurantPhoto/base/RestaurantPhoto";
import { RestaurantWorkingHour } from "../../restaurantWorkingHour/base/RestaurantWorkingHour";
import { Tag } from "../../tag/base/Tag";
import { UserFavoriteRestaurant } from "../../userFavoriteRestaurant/base/UserFavoriteRestaurant";
import { UserInteraction } from "../../userInteraction/base/UserInteraction";

@ObjectType()
class Restaurant {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  affordability!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  contact!: string | null;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  createDate!: Date | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  email!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  fullAddress!: string | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isRegistered!: boolean | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  latitude!: number | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  longitude!: number | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  placeId!: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  rating!: number | null;

  @ApiProperty({
    required: false,
    type: () => [RestaurantPhoto],
  })
  @ValidateNested()
  @Type(() => RestaurantPhoto)
  @IsOptional()
  restaurantPhotos?: Array<RestaurantPhoto>;

  @ApiProperty({
    required: false,
    type: () => [RestaurantWorkingHour],
  })
  @ValidateNested()
  @Type(() => RestaurantWorkingHour)
  @IsOptional()
  restaurantWorkingHours?: Array<RestaurantWorkingHour>;

  @ApiProperty({
    required: false,
    type: () => [Tag],
  })
  @ValidateNested()
  @Type(() => Tag)
  @IsOptional()
  tags?: Array<Tag>;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  totalReviews!: number | null;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  updateDate!: Date | null;

  @ApiProperty({
    required: false,
    type: () => [UserFavoriteRestaurant],
  })
  @ValidateNested()
  @Type(() => UserFavoriteRestaurant)
  @IsOptional()
  userFavoriteRestaurants?: Array<UserFavoriteRestaurant>;

  @ApiProperty({
    required: false,
    type: () => [UserInteraction],
  })
  @ValidateNested()
  @Type(() => UserInteraction)
  @IsOptional()
  userInteractions?: Array<UserInteraction>;
}

export { Restaurant as Restaurant };
